特殊成员函数（
        构造函数、
        析构函数、
        拷贝构造函数、
        移动构造函数、
        拷贝赋值运算符、
        移动赋值运算符
    ）
的默认实现是编译器生成的

    class X {
    public:
        X(SomeType t) : mem(t) { }          // 非默认的构造函数，创建一个对象
        X() = default;                      // 默认的构造函数，创建一个对象
        X(const X&) = default;              // 拷贝构造函数
        X(X&&) = default;                   // 移动构造函数
        X& operator=(const X&) = default;   // 拷贝赋值运算符，清空左侧运算对象，然后从右侧运算对象拷贝值
        X& operator=(X&&) = default;        // 移动赋值运算符，清空左侧运算对象，然后从右侧运算对象移动值
        ~X() = default;                     // 默认的析构函数，清理资源
    }

=default只能出现在类内部的函数声明语句中，且只能用于特殊成员函数，表示显示要求编译器应该为该函数生成默认版本
=delete可以用于任何函数，表示该函数被定义为删除的，不能使用

在下面5中情况下，对象会被移动和拷贝
    1、赋值给其他对象
    2、作为对象初始值
    3、作为函数实参
    4、作为函数返回值
    5、作为异常

赋值语句使用拷贝或者移动赋值运算符，取决于赋值运算符的参数类型
其他情况下，使用拷贝或者移动构造函数，取决于构造函数的参数类型
    1、赋值给其他对象
        X x1;
        X x2 = x1;              // 拷贝构造函数
        X x3 = std::move(x1);   // 移动构造函数
        x1 = x2;                // 拷贝赋值运算符，x1 已经存在，所以是拷贝
        x1 = std::move(x2);     // 移动赋值运算符
    2、作为对象初始值
        X x1;
        X x2(x1);               // 拷贝构造函数
        X x3(std::move(x1));    // 移动构造函数
    3